function Z = ipqpcommon_wrapper(Q,l,Aieq,Bieq,Aeq,Beq,lb,ub,X0)
  % IPQPCOMMON_WRAPPER Call ipqpcommon with some defaults
  % 
  % see quadprog
  %
  % I'm really going out of my way to call matlab's qp solver instead of mosek's
  % quadprog. It seems that matlab's quadprog is the fastest (when there's no
  % inequalities), internally it's calling ipqpcommon
  flags = struct('computeLambda',0,'detailedExitMsg',0,'verbosity',0);
  options = struct( ...
      'Algorithm','interior-point-convex', ...
      'Diagnostics','off', ...
      'Display','final', ...
      'HessMult',[], ...
      'MaxIter',[], ...
      'MaxPCGIter','max(1,floor(numberOfVariables/2))', ...
      'PrecondBandWidth',0, ...
      'TolCon',1e-08, ...
      'TolFun',[], ...
      'TolFunValue',[], ...
      'TolPCG',0.1, ...
      'TolX',2.2204e-14, ...
      'TypicalX','ones(numberOfVariables,1)');
  defaultopt = struct( ...
      'Algorithm','interior-point-convex', ...
      'Diagnostics','off', ...
      'Display','final', ...
      'HessMult',[], ...
      'MaxIter',[], ...
      'MaxPCGIter','max(1,floor(numberOfVariables/2))', ...
      'PrecondBandWidth',0, ...
      'TolCon',1e-8, ...
      'TolFun',[], ...
      'TolFunValue', [], ...
      'TolPCG',0.1, ...
      'TolX',100*eps, ...
      'TypicalX','ones(numberOfVariables,1)' ...
      );
  optionFeedback = struct( ...
      'TolFunValue','default', ...
      'TolFun','default', ...
      'TolX','default', ...
      'MaxIter','default', ...
      'MaxFunEvals','default', ...
      'TolCon','default', ...
      'MaxSQPIter','default', ...
      'ObjectiveLimit','default');
  Z = ipqpcommon(Q,l,Aieq,Bieq,Aeq,Beq,lb,ub,X0, ...
    flags,options,defaultopt,optionFeedback);
end
